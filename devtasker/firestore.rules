rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Team data access for team members
    match /teams/{teamId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.members;
      allow create: if request.auth != null;
    }
    
    // Project data access for project members
    match /projects/{projectId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.members;
      allow create: if request.auth != null;
    }
    
    // Task access based on project membership
    match /tasks/{taskId} {
      allow read, write: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members;
      allow create: if request.auth != null;
    }
    
    // Sprint access based on project membership
    match /sprints/{sprintId} {
      allow read, write: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members;
      allow create: if request.auth != null;
    }
    
    // Time entries access for the user who created them or project members
    match /timeEntries/{entryId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         request.auth.uid in get(/databases/$(database)/documents/projects/$(get(/databases/$(database)/documents/tasks/$(resource.data.taskId)).data.projectId)).data.members);
      allow create: if request.auth != null;
    }
    
    // Comments access based on task/project membership
    match /comments/{commentId} {
      allow read, write: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/projects/$(get(/databases/$(database)/documents/tasks/$(resource.data.taskId)).data.projectId)).data.members;
      allow create: if request.auth != null;
    }
    
    // Notifications for the specific user
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Activity logs - read access for project members
    match /activityLogs/{logId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }
  }
}